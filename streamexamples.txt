1.  list of all employees
		
		list.stream().forEach(e->System.out.println(e));
		
2. list of all employees whose salary > 24000
		
		list.stream()
		.filter(e-> e.getSalary() > 24000)  
		.forEach(System.out::println);
		
3. list of names 
		
		list.stream()
		.map(e-> e.getName())
		.forEach(System.out::println);
		
4.  how many employees
		
		long count =
		list.stream().count();

		System.out.println(count);
		
5.  what is the total salary
		
		double totSalary =
		list.stream()
		.mapToDouble(e-> e.getSalary()) // map returns stream of objects. maptoDouble returns stream of double
		.sum();

		System.out.println(totSalary);
		
		
6.  list of employees of dept 10
		
		list.stream()
		.filter(e-> e.getDeptId()==10)
		.forEach(System.out::println);
		
7. return a list of names
		
		List<String> names=
		list.stream()
		.map(e-> e.getName())
		.collect(Collectors.toList());	
		
		names.forEach(System.out::println);
		
8. what is total salary of dept 10
		
		double totSalary =
		list.stream()
		.filter(e-> e.getDeptId()==10)
		.mapToDouble(e-> e.getSalary()) 
		.sum();

		System.out.println(totSalary);
		
9.  list of empid and name of employees born in July
		
		list.stream()
		
		.filter(e-> e.getDob().getMonth() == 6)
		.map(e-> e.getEmpId()+"  "+e.getName())
		.forEach(System.out::println);
		
10.  data of employees sorted on dob
		
		list.stream()
		.sorted((e1,e2)-> e1.getDob().compareTo(e2.getDob()))
		.forEach(System.out::println);